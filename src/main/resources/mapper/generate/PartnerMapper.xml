<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.hrp.sms.common.dao.generate.PartnerMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.hrp.sms.common.model.Partner">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="link_org" jdbcType="BIGINT" property="linkOrg" />
    <result column="org" jdbcType="BIGINT" property="org" />
    <result column="check_status" jdbcType="INTEGER" property="checkStatus" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="type" jdbcType="BIT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, link_org, org, check_status, `status`, `type`
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.hrp.sms.common.model.PartnerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_partner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_partner
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_partner
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.hrp.sms.common.model.PartnerExample">
    delete from t_partner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    insert into t_partner (id, link_org, org, 
      check_status, `status`, `type`)
    values (#{id,jdbcType=BIGINT}, #{linkOrg,jdbcType=BIGINT}, #{org,jdbcType=BIGINT}, 
      #{checkStatus,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{type,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    insert into t_partner
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkOrg != null">
        link_org,
      </if>
      <if test="org != null">
        org,
      </if>
      <if test="checkStatus != null">
        check_status,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="linkOrg != null">
        #{linkOrg,jdbcType=BIGINT},
      </if>
      <if test="org != null">
        #{org,jdbcType=BIGINT},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.hrp.sms.common.model.PartnerExample" resultType="java.lang.Long">
    select count(*) from t_partner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_partner
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.linkOrg != null">
        link_org = #{record.linkOrg,jdbcType=BIGINT},
      </if>
      <if test="record.org != null">
        org = #{record.org,jdbcType=BIGINT},
      </if>
      <if test="record.checkStatus != null">
        check_status = #{record.checkStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_partner
    set id = #{record.id,jdbcType=BIGINT},
      link_org = #{record.linkOrg,jdbcType=BIGINT},
      org = #{record.org,jdbcType=BIGINT},
      check_status = #{record.checkStatus,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT},
      `type` = #{record.type,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    update t_partner
    <set>
      <if test="linkOrg != null">
        link_org = #{linkOrg,jdbcType=BIGINT},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=BIGINT},
      </if>
      <if test="checkStatus != null">
        check_status = #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    update t_partner
    set link_org = #{linkOrg,jdbcType=BIGINT},
      org = #{org,jdbcType=BIGINT},
      check_status = #{checkStatus,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT},
      `type` = #{type,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_partner
    (id, link_org, org, check_status, `status`, `type`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.linkOrg,jdbcType=BIGINT}, #{item.org,jdbcType=BIGINT}, 
        #{item.checkStatus,jdbcType=INTEGER}, #{item.status,jdbcType=BIT}, #{item.type,jdbcType=BIT}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_partner (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'link_org' == column.value">
          #{item.linkOrg,jdbcType=BIGINT}
        </if>
        <if test="'org' == column.value">
          #{item.org,jdbcType=BIGINT}
        </if>
        <if test="'check_status' == column.value">
          #{item.checkStatus,jdbcType=INTEGER}
        </if>
        <if test="'status' == column.value">
          #{item.status,jdbcType=BIT}
        </if>
        <if test="'type' == column.value">
          #{item.type,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <resultMap id="BaseResultMap" type="com.kingdee.hrp.sms.common.model.Partner">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="link_org" jdbcType="BIGINT" property="linkOrg" />
    <result column="org" jdbcType="BIGINT" property="org" />
    <result column="check_status" jdbcType="INTEGER" property="checkStatus" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="type" jdbcType="BIT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, link_org, org, check_status, `status`, `type`
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.hrp.sms.common.model.PartnerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_partner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_partner
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_partner
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.hrp.sms.common.model.PartnerExample">
    delete from t_partner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    insert into t_partner (id, link_org, org, 
      check_status, `status`, `type`)
    values (#{id,jdbcType=BIGINT}, #{linkOrg,jdbcType=BIGINT}, #{org,jdbcType=BIGINT}, 
      #{checkStatus,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{type,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    insert into t_partner
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkOrg != null">
        link_org,
      </if>
      <if test="org != null">
        org,
      </if>
      <if test="checkStatus != null">
        check_status,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="linkOrg != null">
        #{linkOrg,jdbcType=BIGINT},
      </if>
      <if test="org != null">
        #{org,jdbcType=BIGINT},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.hrp.sms.common.model.PartnerExample" resultType="java.lang.Long">
    select count(*) from t_partner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_partner
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.linkOrg != null">
        link_org = #{record.linkOrg,jdbcType=BIGINT},
      </if>
      <if test="record.org != null">
        org = #{record.org,jdbcType=BIGINT},
      </if>
      <if test="record.checkStatus != null">
        check_status = #{record.checkStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_partner
    set id = #{record.id,jdbcType=BIGINT},
      link_org = #{record.linkOrg,jdbcType=BIGINT},
      org = #{record.org,jdbcType=BIGINT},
      check_status = #{record.checkStatus,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT},
      `type` = #{record.type,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    update t_partner
    <set>
      <if test="linkOrg != null">
        link_org = #{linkOrg,jdbcType=BIGINT},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=BIGINT},
      </if>
      <if test="checkStatus != null">
        check_status = #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.hrp.sms.common.model.Partner">
    update t_partner
    set link_org = #{linkOrg,jdbcType=BIGINT},
      org = #{org,jdbcType=BIGINT},
      check_status = #{checkStatus,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT},
      `type` = #{type,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>