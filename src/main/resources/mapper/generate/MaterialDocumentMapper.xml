<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.hrp.sms.common.dao.generate.MaterialDocumentMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.hrp.sms.common.model.MaterialDocument">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="material" jdbcType="BIGINT" property="material" />
    <result column="supplier" jdbcType="BIGINT" property="supplier" />
    <result column="type" jdbcType="BIGINT" property="type" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="issue" jdbcType="VARCHAR" property="issue" />
    <result column="validity_period_begin" jdbcType="DATE" property="validityPeriodBegin" />
    <result column="validity_period_end" jdbcType="DATE" property="validityPeriodEnd" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="hospital" jdbcType="BIGINT" property="hospital" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, material, supplier, `type`, `number`, issue, validity_period_begin, validity_period_end, 
    remark, hospital
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocumentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_material_document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_material_document
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_material_document
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocumentExample">
    delete from t_material_document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocument">
    insert into t_material_document (id, material, supplier, 
      `type`, `number`, issue, 
      validity_period_begin, validity_period_end, remark, 
      hospital)
    values (#{id,jdbcType=BIGINT}, #{material,jdbcType=BIGINT}, #{supplier,jdbcType=BIGINT}, 
      #{type,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{issue,jdbcType=VARCHAR}, 
      #{validityPeriodBegin,jdbcType=DATE}, #{validityPeriodEnd,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{hospital,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocument">
    insert into t_material_document
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="material != null">
        material,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="issue != null">
        issue,
      </if>
      <if test="validityPeriodBegin != null">
        validity_period_begin,
      </if>
      <if test="validityPeriodEnd != null">
        validity_period_end,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="hospital != null">
        hospital,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="material != null">
        #{material,jdbcType=BIGINT},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="issue != null">
        #{issue,jdbcType=VARCHAR},
      </if>
      <if test="validityPeriodBegin != null">
        #{validityPeriodBegin,jdbcType=DATE},
      </if>
      <if test="validityPeriodEnd != null">
        #{validityPeriodEnd,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="hospital != null">
        #{hospital,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocumentExample" resultType="java.lang.Long">
    select count(*) from t_material_document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_material_document
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.material != null">
        material = #{record.material,jdbcType=BIGINT},
      </if>
      <if test="record.supplier != null">
        supplier = #{record.supplier,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=BIGINT},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.issue != null">
        issue = #{record.issue,jdbcType=VARCHAR},
      </if>
      <if test="record.validityPeriodBegin != null">
        validity_period_begin = #{record.validityPeriodBegin,jdbcType=DATE},
      </if>
      <if test="record.validityPeriodEnd != null">
        validity_period_end = #{record.validityPeriodEnd,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.hospital != null">
        hospital = #{record.hospital,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_material_document
    set id = #{record.id,jdbcType=BIGINT},
      material = #{record.material,jdbcType=BIGINT},
      supplier = #{record.supplier,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=BIGINT},
      `number` = #{record.number,jdbcType=VARCHAR},
      issue = #{record.issue,jdbcType=VARCHAR},
      validity_period_begin = #{record.validityPeriodBegin,jdbcType=DATE},
      validity_period_end = #{record.validityPeriodEnd,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      hospital = #{record.hospital,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocument">
    update t_material_document
    <set>
      <if test="material != null">
        material = #{material,jdbcType=BIGINT},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="issue != null">
        issue = #{issue,jdbcType=VARCHAR},
      </if>
      <if test="validityPeriodBegin != null">
        validity_period_begin = #{validityPeriodBegin,jdbcType=DATE},
      </if>
      <if test="validityPeriodEnd != null">
        validity_period_end = #{validityPeriodEnd,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="hospital != null">
        hospital = #{hospital,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.hrp.sms.common.model.MaterialDocument">
    update t_material_document
    set material = #{material,jdbcType=BIGINT},
      supplier = #{supplier,jdbcType=BIGINT},
      `type` = #{type,jdbcType=BIGINT},
      `number` = #{number,jdbcType=VARCHAR},
      issue = #{issue,jdbcType=VARCHAR},
      validity_period_begin = #{validityPeriodBegin,jdbcType=DATE},
      validity_period_end = #{validityPeriodEnd,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      hospital = #{hospital,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_material_document
    (id, material, supplier, `type`, `number`, issue, validity_period_begin, validity_period_end, 
      remark, hospital)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.material,jdbcType=BIGINT}, #{item.supplier,jdbcType=BIGINT}, 
        #{item.type,jdbcType=BIGINT}, #{item.number,jdbcType=VARCHAR}, #{item.issue,jdbcType=VARCHAR}, 
        #{item.validityPeriodBegin,jdbcType=DATE}, #{item.validityPeriodEnd,jdbcType=DATE}, 
        #{item.remark,jdbcType=VARCHAR}, #{item.hospital,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_material_document (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'material'.toString() == column.value">
          #{item.material,jdbcType=BIGINT}
        </if>
        <if test="'supplier'.toString() == column.value">
          #{item.supplier,jdbcType=BIGINT}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=BIGINT}
        </if>
        <if test="'number'.toString() == column.value">
          #{item.number,jdbcType=VARCHAR}
        </if>
        <if test="'issue'.toString() == column.value">
          #{item.issue,jdbcType=VARCHAR}
        </if>
        <if test="'validity_period_begin'.toString() == column.value">
          #{item.validityPeriodBegin,jdbcType=DATE}
        </if>
        <if test="'validity_period_end'.toString() == column.value">
          #{item.validityPeriodEnd,jdbcType=DATE}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'hospital'.toString() == column.value">
          #{item.hospital,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>