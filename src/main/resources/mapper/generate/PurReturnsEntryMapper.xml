<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.eas.hrp.sms.dao.generate.PurReturnsEntryMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.eas.hrp.sms.model.PurReturnsEntry">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="parent" jdbcType="VARCHAR" property="parent" />
    <result column="orderId" jdbcType="VARCHAR" property="orderId" />
    <result column="orderSeq" jdbcType="VARCHAR" property="orderSeq" />
    <result column="material" jdbcType="VARCHAR" property="material" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="returnQty" jdbcType="NUMERIC" property="returnQty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent, orderId, orderSeq, material, unit, returnQty
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sms_purreturns_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sms_purreturns_entry
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_sms_purreturns_entry
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntryExample">
    delete from t_sms_purreturns_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntry">
    insert into t_sms_purreturns_entry (id, parent, orderId, 
      orderSeq, material, unit, 
      returnQty)
    values (#{id,jdbcType=VARCHAR}, #{parent,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{orderSeq,jdbcType=VARCHAR}, #{material,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{returnQty,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntry">
    insert into t_sms_purreturns_entry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="orderId != null">
        orderId,
      </if>
      <if test="orderSeq != null">
        orderSeq,
      </if>
      <if test="material != null">
        material,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="returnQty != null">
        returnQty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderSeq != null">
        #{orderSeq,jdbcType=VARCHAR},
      </if>
      <if test="material != null">
        #{material,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="returnQty != null">
        #{returnQty,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntryExample" resultType="java.lang.Long">
    select count(*) from t_sms_purreturns_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sms_purreturns_entry
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        orderId = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSeq != null">
        orderSeq = #{record.orderSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.material != null">
        material = #{record.material,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.returnQty != null">
        returnQty = #{record.returnQty,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sms_purreturns_entry
    set id = #{record.id,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR},
      orderId = #{record.orderId,jdbcType=VARCHAR},
      orderSeq = #{record.orderSeq,jdbcType=VARCHAR},
      material = #{record.material,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      returnQty = #{record.returnQty,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntry">
    update t_sms_purreturns_entry
    <set>
      <if test="parent != null">
        parent = #{parent,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        orderId = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderSeq != null">
        orderSeq = #{orderSeq,jdbcType=VARCHAR},
      </if>
      <if test="material != null">
        material = #{material,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="returnQty != null">
        returnQty = #{returnQty,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.eas.hrp.sms.model.PurReturnsEntry">
    update t_sms_purreturns_entry
    set parent = #{parent,jdbcType=VARCHAR},
      orderId = #{orderId,jdbcType=VARCHAR},
      orderSeq = #{orderSeq,jdbcType=VARCHAR},
      material = #{material,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      returnQty = #{returnQty,jdbcType=NUMERIC}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>