<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.eas.hrp.sms.dao.generate.ApprovedSupplierMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.eas.hrp.sms.model.ApprovedSupplier">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="materialItem" jdbcType="VARCHAR" property="materialItem" />
    <result column="isStopped" jdbcType="TINYINT" property="isStopped" />
    <result column="measureUnit" jdbcType="VARCHAR" property="measureUnit" />
    <result column="supplierRate" jdbcType="DECIMAL" property="supplierRate" />
    <result column="taxPrice" jdbcType="DECIMAL" property="taxPrice" />
    <result column="effectualDate" jdbcType="DATE" property="effectualDate" />
    <result column="uneffectualDate" jdbcType="DATE" property="uneffectualDate" />
    <result column="syncStatus" jdbcType="TINYINT" property="syncStatus" />
    <result column="review" jdbcType="TINYINT" property="review" />
    <result column="purMeasureUnit" jdbcType="VARCHAR" property="purMeasureUnit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, supplier, materialItem, isStopped, measureUnit, supplierRate, taxPrice, effectualDate, 
    uneffectualDate, syncStatus, review, purMeasureUnit
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sms_approved_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sms_approved_supplier
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_sms_approved_supplier
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplierExample">
    delete from t_sms_approved_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplier">
    insert into t_sms_approved_supplier (id, supplier, materialItem, 
      isStopped, measureUnit, supplierRate, 
      taxPrice, effectualDate, uneffectualDate, 
      syncStatus, review, purMeasureUnit
      )
    values (#{id,jdbcType=VARCHAR}, #{supplier,jdbcType=VARCHAR}, #{materialItem,jdbcType=VARCHAR}, 
      #{isStopped,jdbcType=TINYINT}, #{measureUnit,jdbcType=VARCHAR}, #{supplierRate,jdbcType=DECIMAL}, 
      #{taxPrice,jdbcType=DECIMAL}, #{effectualDate,jdbcType=DATE}, #{uneffectualDate,jdbcType=DATE}, 
      #{syncStatus,jdbcType=TINYINT}, #{review,jdbcType=TINYINT}, #{purMeasureUnit,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplier">
    insert into t_sms_approved_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="materialItem != null">
        materialItem,
      </if>
      <if test="isStopped != null">
        isStopped,
      </if>
      <if test="measureUnit != null">
        measureUnit,
      </if>
      <if test="supplierRate != null">
        supplierRate,
      </if>
      <if test="taxPrice != null">
        taxPrice,
      </if>
      <if test="effectualDate != null">
        effectualDate,
      </if>
      <if test="uneffectualDate != null">
        uneffectualDate,
      </if>
      <if test="syncStatus != null">
        syncStatus,
      </if>
      <if test="review != null">
        review,
      </if>
      <if test="purMeasureUnit != null">
        purMeasureUnit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="materialItem != null">
        #{materialItem,jdbcType=VARCHAR},
      </if>
      <if test="isStopped != null">
        #{isStopped,jdbcType=TINYINT},
      </if>
      <if test="measureUnit != null">
        #{measureUnit,jdbcType=VARCHAR},
      </if>
      <if test="supplierRate != null">
        #{supplierRate,jdbcType=DECIMAL},
      </if>
      <if test="taxPrice != null">
        #{taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="effectualDate != null">
        #{effectualDate,jdbcType=DATE},
      </if>
      <if test="uneffectualDate != null">
        #{uneffectualDate,jdbcType=DATE},
      </if>
      <if test="syncStatus != null">
        #{syncStatus,jdbcType=TINYINT},
      </if>
      <if test="review != null">
        #{review,jdbcType=TINYINT},
      </if>
      <if test="purMeasureUnit != null">
        #{purMeasureUnit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplierExample" resultType="java.lang.Long">
    select count(*) from t_sms_approved_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sms_approved_supplier
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.supplier != null">
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.materialItem != null">
        materialItem = #{record.materialItem,jdbcType=VARCHAR},
      </if>
      <if test="record.isStopped != null">
        isStopped = #{record.isStopped,jdbcType=TINYINT},
      </if>
      <if test="record.measureUnit != null">
        measureUnit = #{record.measureUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierRate != null">
        supplierRate = #{record.supplierRate,jdbcType=DECIMAL},
      </if>
      <if test="record.taxPrice != null">
        taxPrice = #{record.taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.effectualDate != null">
        effectualDate = #{record.effectualDate,jdbcType=DATE},
      </if>
      <if test="record.uneffectualDate != null">
        uneffectualDate = #{record.uneffectualDate,jdbcType=DATE},
      </if>
      <if test="record.syncStatus != null">
        syncStatus = #{record.syncStatus,jdbcType=TINYINT},
      </if>
      <if test="record.review != null">
        review = #{record.review,jdbcType=TINYINT},
      </if>
      <if test="record.purMeasureUnit != null">
        purMeasureUnit = #{record.purMeasureUnit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sms_approved_supplier
    set id = #{record.id,jdbcType=VARCHAR},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      materialItem = #{record.materialItem,jdbcType=VARCHAR},
      isStopped = #{record.isStopped,jdbcType=TINYINT},
      measureUnit = #{record.measureUnit,jdbcType=VARCHAR},
      supplierRate = #{record.supplierRate,jdbcType=DECIMAL},
      taxPrice = #{record.taxPrice,jdbcType=DECIMAL},
      effectualDate = #{record.effectualDate,jdbcType=DATE},
      uneffectualDate = #{record.uneffectualDate,jdbcType=DATE},
      syncStatus = #{record.syncStatus,jdbcType=TINYINT},
      review = #{record.review,jdbcType=TINYINT},
      purMeasureUnit = #{record.purMeasureUnit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplier">
    update t_sms_approved_supplier
    <set>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="materialItem != null">
        materialItem = #{materialItem,jdbcType=VARCHAR},
      </if>
      <if test="isStopped != null">
        isStopped = #{isStopped,jdbcType=TINYINT},
      </if>
      <if test="measureUnit != null">
        measureUnit = #{measureUnit,jdbcType=VARCHAR},
      </if>
      <if test="supplierRate != null">
        supplierRate = #{supplierRate,jdbcType=DECIMAL},
      </if>
      <if test="taxPrice != null">
        taxPrice = #{taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="effectualDate != null">
        effectualDate = #{effectualDate,jdbcType=DATE},
      </if>
      <if test="uneffectualDate != null">
        uneffectualDate = #{uneffectualDate,jdbcType=DATE},
      </if>
      <if test="syncStatus != null">
        syncStatus = #{syncStatus,jdbcType=TINYINT},
      </if>
      <if test="review != null">
        review = #{review,jdbcType=TINYINT},
      </if>
      <if test="purMeasureUnit != null">
        purMeasureUnit = #{purMeasureUnit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.eas.hrp.sms.model.ApprovedSupplier">
    update t_sms_approved_supplier
    set supplier = #{supplier,jdbcType=VARCHAR},
      materialItem = #{materialItem,jdbcType=VARCHAR},
      isStopped = #{isStopped,jdbcType=TINYINT},
      measureUnit = #{measureUnit,jdbcType=VARCHAR},
      supplierRate = #{supplierRate,jdbcType=DECIMAL},
      taxPrice = #{taxPrice,jdbcType=DECIMAL},
      effectualDate = #{effectualDate,jdbcType=DATE},
      uneffectualDate = #{uneffectualDate,jdbcType=DATE},
      syncStatus = #{syncStatus,jdbcType=TINYINT},
      review = #{review,jdbcType=TINYINT},
      purMeasureUnit = #{purMeasureUnit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>