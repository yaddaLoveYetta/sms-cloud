<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.hrp.sms.common.dao.generate.SystemSettingMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.hrp.sms.common.model.SystemSetting">
    <id column="org" jdbcType="BIGINT" property="org" />
    <id column="category" jdbcType="VARCHAR" property="category" />
    <id column="key" jdbcType="VARCHAR" property="key" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="explanation" jdbcType="VARCHAR" property="explanation" />
    <result column="read_only" jdbcType="BIT" property="readOnly" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    org, category, `key`, `name`, `desc`, `value`, `index`, explanation, read_only
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.hrp.sms.common.model.SystemSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_system_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.kingdee.hrp.sms.common.model.SystemSettingKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_system_setting
    where org = #{org,jdbcType=BIGINT}
      and category = #{category,jdbcType=VARCHAR}
      and `key` = #{key,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.kingdee.hrp.sms.common.model.SystemSettingKey">
    delete from t_system_setting
    where org = #{org,jdbcType=BIGINT}
      and category = #{category,jdbcType=VARCHAR}
      and `key` = #{key,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.hrp.sms.common.model.SystemSettingExample">
    delete from t_system_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.hrp.sms.common.model.SystemSetting">
    insert into t_system_setting (org, category, `key`, 
      `name`, `desc`, `value`, 
      `index`, explanation, read_only
      )
    values (#{org,jdbcType=BIGINT}, #{category,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{index,jdbcType=INTEGER}, #{explanation,jdbcType=VARCHAR}, #{readOnly,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.hrp.sms.common.model.SystemSetting">
    insert into t_system_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="org != null">
        org,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="key != null">
        `key`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="index != null">
        `index`,
      </if>
      <if test="explanation != null">
        explanation,
      </if>
      <if test="readOnly != null">
        read_only,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="org != null">
        #{org,jdbcType=BIGINT},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="explanation != null">
        #{explanation,jdbcType=VARCHAR},
      </if>
      <if test="readOnly != null">
        #{readOnly,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.hrp.sms.common.model.SystemSettingExample" resultType="java.lang.Long">
    select count(*) from t_system_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_system_setting
    <set>
      <if test="record.org != null">
        org = #{record.org,jdbcType=BIGINT},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.key != null">
        `key` = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        `value` = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.index != null">
        `index` = #{record.index,jdbcType=INTEGER},
      </if>
      <if test="record.explanation != null">
        explanation = #{record.explanation,jdbcType=VARCHAR},
      </if>
      <if test="record.readOnly != null">
        read_only = #{record.readOnly,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_system_setting
    set org = #{record.org,jdbcType=BIGINT},
      category = #{record.category,jdbcType=VARCHAR},
      `key` = #{record.key,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      `value` = #{record.value,jdbcType=VARCHAR},
      `index` = #{record.index,jdbcType=INTEGER},
      explanation = #{record.explanation,jdbcType=VARCHAR},
      read_only = #{record.readOnly,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.hrp.sms.common.model.SystemSetting">
    update t_system_setting
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="index != null">
        `index` = #{index,jdbcType=INTEGER},
      </if>
      <if test="explanation != null">
        explanation = #{explanation,jdbcType=VARCHAR},
      </if>
      <if test="readOnly != null">
        read_only = #{readOnly,jdbcType=BIT},
      </if>
    </set>
    where org = #{org,jdbcType=BIGINT}
      and category = #{category,jdbcType=VARCHAR}
      and `key` = #{key,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.hrp.sms.common.model.SystemSetting">
    update t_system_setting
    set `name` = #{name,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=VARCHAR},
      `index` = #{index,jdbcType=INTEGER},
      explanation = #{explanation,jdbcType=VARCHAR},
      read_only = #{readOnly,jdbcType=BIT}
    where org = #{org,jdbcType=BIGINT}
      and category = #{category,jdbcType=VARCHAR}
      and `key` = #{key,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_system_setting
    (org, category, `key`, `name`, `desc`, `value`, `index`, explanation, read_only)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.org,jdbcType=BIGINT}, #{item.category,jdbcType=VARCHAR}, #{item.key,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.desc,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR}, 
        #{item.index,jdbcType=INTEGER}, #{item.explanation,jdbcType=VARCHAR}, #{item.readOnly,jdbcType=BIT}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into t_system_setting (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'org'.toString() == column.value">
          #{item.org,jdbcType=BIGINT}
        </if>
        <if test="'category'.toString() == column.value">
          #{item.category,jdbcType=VARCHAR}
        </if>
        <if test="'key'.toString() == column.value">
          #{item.key,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'desc'.toString() == column.value">
          #{item.desc,jdbcType=VARCHAR}
        </if>
        <if test="'value'.toString() == column.value">
          #{item.value,jdbcType=VARCHAR}
        </if>
        <if test="'index'.toString() == column.value">
          #{item.index,jdbcType=INTEGER}
        </if>
        <if test="'explanation'.toString() == column.value">
          #{item.explanation,jdbcType=VARCHAR}
        </if>
        <if test="'read_only'.toString() == column.value">
          #{item.readOnly,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>